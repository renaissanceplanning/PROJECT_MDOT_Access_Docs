#MANAGE DECAY RATES
#Author: Alex Bell, Renaissance Planning
#Last updated: Oct. 2018
"""
This is the geoprocessing interface for creating, storing, and modifying
decay rate configuration files for use in MMA analyses.

Decay rates define how to discount activities at different destinations 
based on the cumulative impedance (usually travel time) from the origin.

Decay config file : File (.json)
	The .json config file in which to store decay rate details for later 
	processing during accessibility summarization.
Name
	A short name to identify the decay rate.  The name is added to fields
	in the tables generated by the `Summarize Accessibility` tool,
	so a short string of a few characters is recommended.
Constant : Float
	The constant term in the decay expression. Typical values 
	are generally near or slightly above 1.0.
Coefficient : Float
	The coefficient term in the decay expression.  Typical values
	are less than zero.
Minimum impedance : Float, optional
	The minimum impedance value to be evaluated as the `impedance`
	term in the decay formula. If blank, zero is assumed as the 
	minimum impedance value.
Maximum impedance : Float, optional
	The maximum impedance value to be evaluated as the `impedance`
	term in the decay formula.  If blank, infinity is assumed as the 
	maximum impedance value.
Exclude destinations below the minimum : Boolean, optional
	Flag defining how to treat `impedance` values less than
	`minimum impedance`.  If True, values less than `minimum impedance`
	are ignored.  If False, values less than `minimum impedance` are
	treated as `minimum impedance`.  
Exclude destinations beyond the maximum : Boolean, optional
	Flag defining how to treat `impedance` values greater than
	`maximum impedance`.  If True, values greater than `maximum impedance`
	are ignored.  If False, values greater than `maximum impedance` are
	treated as `maximum impedance`.  
Lower bound of result : Float, optional
	Minimum value to return when evaluating the decay funtion
	specified by the `decay config file` with respect to a given impedance
	value. If no `lower bound` is provided, no lower bound constraint is
	placed on the decay formula (the fomula will typicall assymptotically
	approach zero when `constant` and `coefficient` values are in normal
	ranges.)
Upper bound of result : Float, optional
	Maximum value to return when evaluating the decay funtion
	specified by the `decay config file` with respect to a given impedance
	value.  
Description : String, optional
	A longer description of the decay curve being defined.  The
	`description` offers more detail than can be conveyed in the
	`name` parameter.
	
See Also
---------
mma.Decay
mma.decayToJson
mma.jsonToDecay
gp_summarizeAccessibility
"""

import arcpy
import mma

if __name__ == "__main__":
    decay_file = arcpy.GetParameterAsText(0) # .json file
    name = arcpy.GetParameterAsText(1) #string
    const = arcpy.GetParameter(2) #double
    coef = arcpy.GetParameter(3) #double
    min_impedance = arcpy.GetParameter(4) #double, optional
    max_impedance = arcpy.GetParameter(5) #double, optional
    excl_less_than_min = arcpy.GetParameter(6) # boolean, optional
    excl_greater_than_max = arcpy.GetParameter(7) #boolean, optional
    lbound = arcpy.GetParameter(8) #double, optional
    ubound = arcpy.GetParameter(9) # double, optional
    desc = arcpy.GetParameterAsText(10) #string, optional

    if min_impedance in [None, "", False]:
        min_impedance = 0.0
    if max_impedance in [None, "", False, 0]:
        max_impedance = float('inf')
    if lbound is None:
        lbound = 0.0
    if ubound is None:
        ubound = 1.0

    decay_obj = mma.Decay(name, const, coef,
                      min_impedance=min_impedance,
                      max_impedance=max_impedance,
                      excl_less_than_min=excl_less_than_min,
                      lbound=lbound, ubound=ubound,
                      desc=desc)
    mma.decayToJson(decay_obj, decay_file)
        
